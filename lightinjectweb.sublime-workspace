{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"Ar",
				"Argument"
			],
			[
				"AR",
				"Argument"
			],
			[
				"Em",
				"Employees"
			],
			[
				"Order",
				"OrderDetails"
			],
			[
				"I",
				"IBar"
			],
			[
				"padding",
				"padding-bottom"
			],
			[
				"bo",
				"border-radius"
			],
			[
				"borders",
				"border-style"
			],
			[
				"pa",
				"padding-top"
			],
			[
				"fo",
				"font-size"
			],
			[
				"li",
				"list-style"
			],
			[
				"p",
				"padding-left"
			],
			[
				"bod",
				"border"
			],
			[
				"border-c",
				"border-color"
			],
			[
				"border-",
				"border-color"
			],
			[
				"border-co",
				"border-color"
			],
			[
				"ma",
				"markdownElement"
			],
			[
				"mark",
				"markdown"
			],
			[
				"re",
				"renderMarkdown"
			],
			[
				"e",
				"each"
			],
			[
				"fun",
				"function"
			],
			[
				"va",
				"value"
			],
			[
				"fn",
				"function"
			],
			[
				"mar",
				"markdownElements"
			],
			[
				"mr",
				"markdown"
			],
			[
				"par",
				"parsedHtml"
			],
			[
				"t",
				"text"
			],
			[
				"n",
				"none"
			],
			[
				"boi",
				"border-width"
			],
			[
				"bord",
				"border-bottom-width"
			],
			[
				"im",
				"iframe	Tag"
			],
			[
				"se",
				"section	Tag"
			],
			[
				"di",
				"display"
			],
			[
				"image",
				"imagerow"
			],
			[
				"l",
				"lead"
			],
			[
				"w",
				"width"
			],
			[
				"span",
				"span4"
			],
			[
				"do",
				"documentation"
			],
			[
				"cn",
				"container"
			],
			[
				"i",
				"iframe	Tag"
			],
			[
				"b",
				"body	Tag"
			],
			[
				"h",
				"h1	Tag"
			],
			[
				"sp",
				"span8"
			],
			[
				"co",
				"color"
			]
		]
	},
	"buffers":
	[
		{
			"contents": "Web\nEnables LightInject to be used in a web application and provides support for PerWebRequest scoped service instances.\n\nPM> Install-Package LightInject.Web\nThe following example shows how to enable LightInject in the Application_Start event.\n\nprotected void Application_Start()\n{\n    var serviceContainer = new ServiceContainer();            \n    serviceContainer.Register<IFoo, Foo>(new PerScopeLifetime()); \n    LightInjectHttpModule.SetServiceContainer(serviceContainer);        \n}\nA service	 registered with PerScopeLifetime is scoped per web request and is disposed at the end of the request if it implements IDisposable.\n\n",
			"settings":
			{
				"buffer_size": 630,
				"line_ending": "Windows",
				"name": "Web"
			}
		},
		{
			"contents": "container.Register<IFoo, Foo>();\ncontainer.Register<IFoo, AnotherFoo>(\"AnotherFoo\");\n\ncontainer.Decorate(typeof(IFoo), typeof(FooDecorator));\ncontainer.Intercept(sr => sr.ServiceType == typeof(IFoo), m => m.name = \"Execute\", f => f.GetInstance<IInterceptor>(\"LogInterceptor\"));\ncontainer.Intercept(sr => sr.ImplementingType == typeof(AnotherFoo), m => m.name = \"Execute\", f => f.GetInstance<IInterceptor>(\"CacheInterceptor\"));\ncontainer.Decorate(typepf(IFoo), typeof(AnotherFooDecorator));\n\nFoo gets only Loginterceptor, while AnotherFoo gets both. These are two different proxy types, the keys is ?\n\n\n\n\n\n\nDecorate(Type serviceType, Type decoratorType, Func<ServiceRegistration, bool> predicate);\n\n\nDecorate(Type serviceType, Type decoratorType, Func<ServiceRegistration, bool> predicate);\n\n\n\ncontainer.Decorate(sr => sr.ServiceType == typeof(IFoo), pd => pd.Intercept(() => new CacheInterceptor()));\n\ncontainer.Decorate(sr => sr.ServiceType == typeof(IFoo), pd => pd.Intercept(() => new CacheInterceptor()));\n\n\ncontainer.Decorate(sr => sr.ServiceType == typeof(IFoo), pd => pd.Intercept(() => new CacheInterceptor()));\n\n\ncontainer.Intercept(sr => sr.ServiceType == typeof(IFoo), pd => pd.Implement(() => new CacheInterceptor()));\n\n\n\nAdd the IsDeclaredBy and IsPropertySetter/Getter extension methods?\n\n\n\ncontainer.StartMocking<IFoo>(f => f.Execute)",
			"settings":
			{
				"buffer_size": 1349,
				"line_ending": "Windows",
				"name": "container.Register<IFoo, Foo>();"
			}
		},
		{
			"file": "/C/DIPS-Log/DIPS-EPJ-PAS-Server-WcfService-Main.log",
			"settings":
			{
				"buffer_size": 16433468,
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/Program Files (x86)/DIPS/Arena/Arena.exe.config",
			"settings":
			{
				"buffer_size": 7919,
				"line_ending": "Windows"
			}
		},
		{
			"contents": "using System.Data;\nusing DIPS.Core.Security.Authorization;\nusing DIPS.Infrastructure.AutoConfig;\nusing DIPS.Infrastructure.Data.NHibernate;\nusing DIPS.Infrastructure.SpringUtils;\nusing DIPS.ProcessManager;\nusing Oracle.DataAccess.Client;\n\nnamespace DIPS.Workflow.Server.DB.WorkflowTasks\n{\n    /// <summary>\n    /// Hack!!!\n    /// Uses NHibernateSession to get same transaction as the original HealthRecord session that triggered the event.\n    /// </summary>\n    public class WorkflowTasksDataAccess : IWorkflowTasksDataAccess\n    {\n        public void CreateTask(WorkflowTask task)\n        {\n            using (var command = QueryRepository.Session.Connection.CreateCommand())\n            {\n                command.CommandText = \"DIPSDB.dpWorkflow.CreateTask\";\n                command.CommandType = CommandType.StoredProcedure;\n\n                command.Parameters.Add(\n                    new OracleParameter\n                    {\n                        DbType = DbType.Int64,\n                        Direction = ParameterDirection.ReturnValue,\n                    });\n\n                command.Parameters.Add(\n                    new OracleParameter\n                    {\n                        ParameterName = \"p_PatientId_in\",\n                        Value = task.PatientId,\n                        DbType = DbType.Int64,\n                        Direction = ParameterDirection.Input\n                    });\n\n                command.Parameters.Add(\n                    new OracleParameter\n                    {\n                        ParameterName = \"p_TaskType_in\",\n                        Value = task.WorkflowTaskTypeId,\n                        DbType = DbType.Int64,\n                        Direction = ParameterDirection.Input\n                    });\n\n                command.Parameters.Add(\n                    new OracleParameter\n                    {\n                        ParameterName = \"p_WorkGroupId_in\",\n                        Value = task.WorkflowGroupId,\n                        DbType = DbType.Int64,\n                        Direction = ParameterDirection.Input\n                    });\n\n                command.Parameters.Add(\n                    new OracleParameter\n                    {\n                        ParameterName = \"p_DocumentId_in\",\n                        Value = task.JournalId,\n                        DbType = DbType.Int64,\n                        Direction = ParameterDirection.Input\n                    });\n\n                command.Parameters.Add(\n                    new OracleParameter\n                    {\n                        ParameterName = \"p_CreatedTime_in\",\n                        Value = task.CreatedDate,\n                        DbType = DbType.Date,\n                        Direction = ParameterDirection.Input\n                    });\n\n                var result = command.ExecuteNonQuery();\n            }\n        }\n\n        using (var dbClient = new DbClient())\n        {\n            dbClient.ExecuteNonQuery(\"DIPSDB.dpWorkflow.CreateTask\", \n                                                                    task.PatientId, \n                                                                    task.WorkflowTaskTypeId, \n                                                                    task.WorkflowGroupId, \n                                                                    task.JournalId, \n                                                                    task.CreatedDate);\n        }\n\n\n        [Mandatory]\n        public INHibernateQueryRepository<DummyDto> QueryRepository { get; set; }\n\n        [RepositoryObject(ElementTypeId = ElementTypeId.ElementWithUnrestrictedAccess)]\n        public class DummyDto\n        {\n        }\n    }\n}\n",
			"file": "/C/Utv/Product/EPJ-PAS/Dev/V-NEXT/CoreModules/Workflow/Server/Database/DIPS.Workflow.Server.DB/WorkflowTasks/WorkflowTasksDataAccess.cs",
			"file_size": 3219,
			"file_write_time": 130056496880804925,
			"settings":
			{
				"buffer_size": 3708,
				"line_ending": "Windows"
			}
		},
		{
			"contents": "     <add key=\"DefaultAddressHostAndPort\" value=\"VD-V-Next2\"/>",
			"settings":
			{
				"buffer_size": 62,
				"line_ending": "Windows",
				"name": "<add key=\"DefaultAddressHostAndPort\" value=\"V"
			}
		}
	],
	"build_system": "",
	"command_palette":
	{
		"height": 311.0,
		"selected_items":
		[
			[
				"Package Control: ",
				"Package Control: Install Package"
			],
			[
				"ma",
				"Markdown Preview: preview in Browser"
			],
			[
				"markd",
				"Markdown Preview: preview in Browser"
			],
			[
				"markdown",
				"Markdown Preview: preview in Browser"
			],
			[
				"mark",
				"Markdown Preview: preview in Browser"
			]
		],
		"width": 400.0
	},
	"console":
	{
		"height": 146.0
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"file_history":
	[
		"/C/DIPS-Log/DIPS-EPJ-PAS-Server-WcfService-Main.log",
		"/C/Utv/Product/EPJ-PAS/Dev/V-NEXT/Modules/MessageBroker/Server/Database/DIPS.MessageBroker.Server.DB/CapselHeaderMap.cs",
		"/C/Utv/Product/EPJ-PAS/Dev/V-NEXT/Modules/MessageBroker/Server/Database/DIPS.MessageBroker.Server.DB/DbTransactionCapselHeader.cs",
		"/C/Log/log.txt",
		"/C/Utv/Product/EPJ-PAS/Dev/V-NEXT/Modules/MessageBroker/Common/DIPS.MessageBroker/WorkflowSpecification/Transition.cs",
		"/C/Program Files (x86)/DIPS/EPJ-PAS/result.txt",
		"/C/Utv/Product/EPJ-PAS/Dev/V-NEXT/Modules/Core/Test/IntegrationTest/TestDIPS.Core.Integration/Config/AutoConfigSanityTests.cs",
		"/C/Utv/Product/Application/MessageBroker/Modules/MessageBroker/Server/Database/DIPS.MessageBroker.Server.DB/DbTransactionCapselHeader.cs",
		"/C/Users/bri/Documents/Visual Studio 2012/Projects/ScanAndVerify/ScanAndVerify/bin/Debug/AssemblyVerification.txt",
		"/C/Utv/Product/EPJ-PAS/Dev/V-NEXT/Modules/MessageBroker/Common/DIPS.MessageBroker/CapselHeader.cs",
		"/C/Utv/Product/EPJ-PAS/Main/Modules/Core/Server/Database/DIPS.Core.Data.Server/OracleDataReaderExtensions.cs",
		"/C/Utv/Product/EPJ-PAS/Main/Modules/MessageBroker/Server/Database/DIPS.MessageBroker.Server.DB/DbTransactionCapselHeader.cs",
		"/C/Users/bri/AppData/Roaming/NuGet/NuGet.Config",
		"/C/Users/bri/Documents/Visual Studio 2012/Projects/LightInject/index.html",
		"/C/Install/RSDev/RSDev/Development/RSApplication/Source/VismaRetail/Common/VismaRetail.Common/Query/ISpecification.cs",
		"/C/Install/RSDev/RSDev/Development/RSApplication/Source/VismaRetail/Common/VismaRetail.Common.Tests/Persistence/SpecificationTests.cs",
		"/C/Users/bri/AppData/Roaming/DIPS/Installer/20130627_105505/DIPS_EPJ_PAS_Server_Suite_20130627105504_2_PatientBillingServer.log",
		"/C/Users/bri/AppData/Roaming/DIPS/Installer/20130627_105505/DIPS_EPJ_PAS_Server_Suite_20130627105504_0_WebServer.log",
		"/C/Users/bri/AppData/Roaming/DIPS/Installer/20130627_110129/DIPS_EPJ_PAS_Server_Suite_20130627110129_0_WebServer.log",
		"/C/Users/bri/AppData/Roaming/DIPS/Installer/20130627_111206/DIPS_EPJ_PAS_Server_Suite_20130627111206_0_WebServer.log",
		"/C/Program Files (x86)/DIPS/Arena/Arena.exe.config",
		"/C/Users/bri/AppData/Roaming/DIPS/Arena.Log/Dips-Arena-Error.log",
		"/C/Users/bri/Documents/Visual Studio 2012/Projects/LightInject/CNAME",
		"/C/Users/bri/Documents/Visual Studio 2012/Projects/LightInject/doc/unittesting.md",
		"/C/Temp/logs/proxy/client.txt.1",
		"/C/Users/bri/Documents/Visual Studio 2012/Projects/LightInject/doc/web.md",
		"/C/Users/bri/Documents/Visual Studio 2012/Projects/ScanAndVerify/ScanAndVerify/bin/Debug/IgnoreErrors.txt",
		"/C/Users/bri/Documents/Visual Studio 2012/Projects/ClassLibrary7/ClassLibrary7Tests/bin/Debug/AssemblyVerification.txt",
		"/C/Users/bri/Documents/Visual Studio 2012/Projects/ScanAndVerify/ScanAndVerify/bin/Debug/AssemblyVerification2.txt",
		"/C/Users/bri/Documents/My Received Files/AssemblyVerification2.txt",
		"/C/Utv/Product/EPJ-PAS/Dev/V-NEXT/Modules/HealthRecord/Common/DIPS.HealthRecord.Documents.Interfaces/MetadataEditorNavigation.cs",
		"/C/Utv/Product/Arena/Main/Common/DIPS.Arena.Interface/Navigation/NavigationPlugin.cs",
		"/C/Utv/Product/EPJ-PAS/Dev/V-NEXT/Modules/ClinicalVariables/Common/DIPS.ClinicalVariables/TimelineMapping/FluidManagement/FluidManagementMapping.cs",
		"/C/Utv/Product/EPJ-PAS/Dev/V-NEXT/Binaries/x86/Debug/_PublishedWebsites/DIPS.Health.WS.Server/Web.config",
		"/C/Users/bri/Source/Repos/LightProxy/.git/config",
		"/C/Users/bri/Documents/API notes.cs",
		"/C/oracle/product/11.2.0/client_1/network/admin/sample/tnsnames.oRA",
		"/C/oracle/product/11.2.0/client_1/network/admin/tnsnames.ora",
		"/C/Users/bri/Documents/My Received Files/TargetFX.txt",
		"/C/Users/bri/Documents/Visual Studio 2012/Projects/LightInject/index2.html",
		"/C/Users/bri/Documents/Visual Studio 2012/Projects/LightInject/assets/script/markdown.js",
		"/C/Users/bri/Documents/Visual Studio 2012/Projects/LightInject/assets/css/common.css",
		"/C/Users/bri/Documents/Visual Studio 2012/Projects/LightInject/doc/gettingstarted.md",
		"/C/Users/bri/Documents/test.cs",
		"/C/Users/bri/Documents/Visual Studio 2012/Projects/LightInject/doc/servicelocation.md",
		"/C/Users/bri/Documents/Visual Studio 2012/Projects/LightInject/doc/servicelocation",
		"/C/Users/bri/Documents/Visual Studio 2012/Projects/LightInject/markdown.md",
		"/C/Users/bri/Documents/Visual Studio 2012/Projects/LightInject/gettingstartedwithmarkdown.html",
		"/C/Users/bri/Documents/Visual Studio 2012/Projects/LightInject/markdown.js",
		"/C/Users/bri/AppData/Roaming/Sublime Text 2/Packages/User/Git.sublime-settings",
		"/C/Users/bri/AppData/Roaming/Sublime Text 2/Packages/User/SublimeServer.sublime-settings",
		"/C/Users/bri/Documents/Visual Studio 2012/Projects/LightInject/markdown2.md",
		"/C/Users/bri/Documents/Visual Studio 2012/Projects/LightInject/Part1.html",
		"/C/Users/bri/Documents/Visual Studio 2012/Projects/LightInject/part2.html",
		"/C/Users/bri/Documents/Visual Studio 2012/Projects/LightInject/assets/script/common.js",
		"/C/Users/bri/Documents/Visual Studio 2012/Projects/LightInject/assets/highlight.js/styles/github.css",
		"/C/Users/bri/AppData/Roaming/Sublime Text 2/Packages/SmartMarkdown/SmartMarkdown.sublime-settings",
		"/C/Users/bri/AppData/Roaming/Sublime Text 2/Packages/Markdown Preview/MarkdownPreview.sublime-settings",
		"/C/Users/bri/Documents/Visual Studio 2012/Projects/LightInject/gettingstarted.md",
		"/C/Users/bri/AppData/Roaming/Sublime Text 2/Packages/LiveReload/LiveReload.sublime-settings",
		"/C/Users/bri/AppData/Roaming/Sublime Text 2/Packages/User/LiveReload.sublime-settings",
		"/C/Users/bri/AppData/Roaming/Sublime Text 2/Packages/User/MarkdownPreview.sublime-settings",
		"/C/Users/bri/Documents/Visual Studio 2012/Projects/LightInject/assets/css/docs.css",
		"/C/Users/bri/Documents/Visual Studio 2012/Projects/LightInject/gettingstarted2.html",
		"/C/Users/bri/Documents/Visual Studio 2012/Projects/LightInject/assets/bootstrap/js/bootstrap-responsive.css",
		"/C/Users/bri/Documents/Visual Studio 2012/Projects/LightInject/strapdowntest.html",
		"/C/Users/bri/Documents/Visual Studio 2012/Projects/LightInject/gettingstarted.html",
		"/C/Users/bri/Documents/Visual Studio 2012/Projects/LightInject/gettingstartediframe.html",
		"/C/Users/bri/Documents/Visual Studio 2012/Projects/LightInject/lightinjectweb.sublime-project",
		"/C/Users/bri/Documents/Visual Studio 2012/Projects/LightInject/lightinjectweb.sublime-workspace",
		"/C/Users/bri/Documents/Homepage.html",
		"/C/Users/bri/Documents/GitHub/LightInject/.git/ORIG_HEAD",
		"/C/Users/bri/Documents/GitHub/LightInject/.git/description",
		"/C/Users/bri/Documents/GitHub/LightInject/.git/packed-refs",
		"/C/Users/bri/Documents/GitHub/LightInject/.git/config",
		"/C/Users/bri/Documents/LightInjectWeb/index.html",
		"/C/Users/bri/Documents/LightInjectWeb/gettingstarted.html",
		"/C/Users/bri/Documents/LightInjectWeb/lightinjectweb.sublime-project",
		"/C/Users/bri/Documents/test.sublime-project",
		"/C/Users/bri/Documents/GitHub/LightInject/NuGet/LightInject/package/LightInject.nuspec",
		"/C/Users/bri/Documents/GitHub/LightInject/NuGet/LightInject.Web/package/LightInject.Web.nuspec",
		"/C/Users/bri/Documents/GitHub/LightInject/NuGet/LightInject.ServiceLocation/package/LightInject.ServiceLocation.nuspec",
		"/C/Users/bri/Documents/GitHub/LightInject/NuGet/LightInject.Annotation/package/LightInject.Annotation.nuspec",
		"/C/Users/bri/AppData/Roaming/Sublime Text 2/Packages/Default/Preferences.sublime-settings",
		"/C/Users/bri/AppData/Roaming/Sublime Text 2/Packages/Default/Default (Windows).sublime-keymap",
		"/C/Users/bri/AppData/Roaming/Sublime Text 2/Packages/HTML/HTML.tmLanguage"
	],
	"find":
	{
		"height": 34.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"GetHeaderXml",
			"DbClient",
			"DWGRUPPETYPEKOBLING",
			"AVUREPRGROUP",
			"Transition",
			"struct",
			"UTV72",
			"holder.js",
			"holder",
			"section",
			"pre",
			"dib",
			"servicelocator"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 4,
			"sheets":
			[
				{
					"buffer": 0,
					"settings":
					{
						"buffer_size": 630,
						"regions":
						{
						},
						"selection":
						[
							[
								630,
								630
							]
						],
						"settings":
						{
							"auto_name": "Web",
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 1,
					"settings":
					{
						"buffer_size": 1349,
						"regions":
						{
						},
						"selection":
						[
							[
								1348,
								1348
							]
						],
						"settings":
						{
							"auto_name": "container.Register<IFoo, Foo>();",
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "/C/DIPS-Log/DIPS-EPJ-PAS-Server-WcfService-Main.log",
					"settings":
					{
						"buffer_size": 16433468,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 314532.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "/C/Program Files (x86)/DIPS/Arena/Arena.exe.config",
					"settings":
					{
						"buffer_size": 7919,
						"regions":
						{
						},
						"selection":
						[
							[
								3440,
								3440
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "/C/Utv/Product/EPJ-PAS/Dev/V-NEXT/CoreModules/Workflow/Server/Database/DIPS.Workflow.Server.DB/WorkflowTasks/WorkflowTasksDataAccess.cs",
					"settings":
					{
						"buffer_size": 3708,
						"regions":
						{
						},
						"selection":
						[
							[
								2772,
								2772
							]
						],
						"settings":
						{
							"syntax": "Packages/C#/C#.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 702.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 5,
					"settings":
					{
						"buffer_size": 62,
						"regions":
						{
						},
						"selection":
						[
							[
								62,
								62
							]
						],
						"settings":
						{
							"auto_name": "<add key=\"DefaultAddressHostAndPort\" value=\"V",
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 0.0
	},
	"input":
	{
		"height": 34.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.git":
	{
		"height": 118.0
	},
	"replace":
	{
		"height": 0.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"show_minimap": true,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 236.0,
	"status_bar_visible": true
}
